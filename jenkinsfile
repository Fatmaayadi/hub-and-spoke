pipeline {
    agent any

    environment {
        OCI_CONFIG = '/home/jenkins/.oci/config'
        OCI_KEY = '/home/jenkins/.oci/oci_api_key.pem'
    }

    stages {
        stage('Prepare Workspace') {
            steps {
                script {
                    echo "Creating /home/jenkins/.oci folder if not exists"
                    sh '''
                        mkdir -p /home/jenkins/.oci
                        chmod 700 /home/jenkins/.oci
                    '''
                }
            }
        }

        stage('Copy OCI Config and Key') {
            steps {
                withCredentials([
                    file(credentialsId: 'oci_config', variable: 'OCI_CONFIG_FILE'),
                    file(credentialsId: 'oci_key', variable: 'OCI_KEY_FILE')
                ]) {
                    sh '''
                        cp "$OCI_CONFIG_FILE" /home/jenkins/.oci/config
                        cp "$OCI_KEY_FILE" /home/jenkins/.oci/oci_api_key.pem
                        chmod 600 /home/jenkins/.oci/config
                        chmod 600 /home/jenkins/.oci/oci_api_key.pem
                    '''
                }
            }
        }

        stage('Terraform Init') {
            steps {
                dir('config_test2') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('config_test2') {
                    sh 'terraform plan -var-file="terraform.auto.tfvars"'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('config_test2') {
                    sh 'terraform apply -var-file="terraform.auto.tfvars" -auto-approve'
                }
            }
        }


        stage('Terraform Destroy') {
    steps {
        script {
            def destroyConfirmed = false

            catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
                input message: 'Do you want to destroy all OCI resources?', ok: 'Yes, destroy'
                destroyConfirmed = true
            }

            if (destroyConfirmed) {
                dir('config_test2') {
                    sh 'terraform destroy -var-file="terraform.auto.tfvars" -auto-approve'
                }
            } else {
                echo 'Destroy skipped by user.'
            }
        }
    }
}

    }

    post {
        success {
            mail to: 'ayadifatma418@gmail.com',
                 subject: "✅ Succès du job Jenkins: ${env.JOB_NAME}",
                 body: "Le job '${env.JOB_NAME}' s'est terminé avec succès.\nLien: ${env.BUILD_URL}"
        }
        failure {
            mail to: 'ayadifatma418@gmail.com',
                 subject: "❌ Échec du job Jenkins: ${env.JOB_NAME}",
                 body: "Le job '${env.JOB_NAME}' a échoué.\nVérifie les logs: ${env.BUILD_URL}"
        }
    }
}
